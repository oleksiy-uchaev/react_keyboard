{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeydown","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,UAAWC,KAAKN,iBAN9C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,iBAVjD,oBAiBE,WACE,IAAMG,EAAMG,KAAKR,MAAMC,WAEvB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACY,OAARL,EACG,0BADJ,mCAEgCA,EAFhC,aAvBX,GAAyBM,a,MCDzBC,IAASC,OAEP,cAAC,EAAD,IAEAP,SAASQ,eAAe,W","file":"static/js/main.6c9328df.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | null,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown = (event:KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const key = this.state.pressedKey;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {(key === null\n            && 'Nothing was pressed yet')\n            || `The last pressed key is [${key}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}